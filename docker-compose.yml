version: '3.8'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - java_myNetwork

  kafka:
    image: 'bitnami/kafka:latest'
    user: root
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./Kafka:/bitnami/kafka
    networks:
      - java_myNetwork
    depends_on:
      - zookeeper

  eureka-server:
    image: eureka-server:latest
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - java_myNetwork

  user-profile-service:
    image: user-profile-service:latest
    build:
      context: ./user-profile-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - mysql
      - kafka
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/newsapp
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # Added Kafka configuration
    networks:
      - java_myNetwork

  authentication-service:
    image: authentication-service:latest
    build:
      context: ./authentication-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - mysql
      - kafka
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/newsapp
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=1234
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092  # Added Kafka configuration
    networks:
      - java_myNetwork

  news-service:
    image: news-service:latest
    build:
      context: ./news-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - kafka
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - java_myNetwork

  wishlist-service:
    image: wishlist-service:latest
    build:
      context: ./wishlist-service
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    depends_on:
      - eureka-server
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/wishlistdb
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - java_myNetwork

  api-gateway:
    image: api-gateway:latest
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    depends_on:
      - eureka-server
      - user-profile-service
      - wishlist-service
      - news-service
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - java_myNetwork

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=newsapp
      - MYSQL_ROOT_PASSWORD=1234
    ports:
      - "3306:3306"
    networks:
      - java_myNetwork
    volumes:
      - mysql-data:/var/lib/mysql

  mongodb:
    image: mongo:4.4
    ports:
      - "27017:27017"
    networks:
      - java_myNetwork
    volumes:
      - mongodb-data:/data/db

volumes:
  mysql-data:
  mongodb-data:

networks:
  java_myNetwork:
    driver: bridge